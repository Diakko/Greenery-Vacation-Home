diff --git a/node_modules/@ubaids/react-native-material-textfield/src/components/field/index.js b/node_modules/@ubaids/react-native-material-textfield/src/components/field/index.js
index 5f2942a..5118496 100644
--- a/node_modules/@ubaids/react-native-material-textfield/src/components/field/index.js
+++ b/node_modules/@ubaids/react-native-material-textfield/src/components/field/index.js
@@ -1,5 +1,5 @@
 import PropTypes from 'prop-types'
-import React, { PureComponent } from 'react'
+import React, {PureComponent} from 'react'
 import {
   View,
   Text,
@@ -23,14 +23,14 @@ function startAnimation(animation, options, callback) {
 }
 
 function labelStateFromProps(props, state) {
-  let { placeholder, defaultValue } = props
-  let { text, receivedFocus } = state
+  let {placeholder, defaultValue} = props
+  let {text, receivedFocus} = state
 
   return !!(placeholder || text || (!receivedFocus && defaultValue))
 }
 
 function errorStateFromProps(props, state) {
-  let { error } = props
+  let {error} = props
 
   return !!error
 }
@@ -44,14 +44,14 @@ export default class TextField extends PureComponent {
 
     animationDuration: 225,
 
-    fontSize: 16,
+    fontSize: 15,
     labelFontSize: 12,
 
-    tintColor: 'rgb(0, 145, 234)',
-    textColor: 'rgba(0, 0, 0, .87)',
-    baseColor: 'rgba(0, 0, 0, .38)',
+    tintColor: 'rgb(255, 255, 255)',
+    textColor: 'rgb(255, 255, 255)',
+    baseColor: 'rgb(255, 255, 255)',
 
-    errorColor: 'rgb(213, 0, 0)',
+    errorColor: 'rgb(249, 235, 73)',
 
     lineWidth: StyleSheet.hairlineWidth,
     activeLineWidth: 2,
@@ -137,10 +137,10 @@ export default class TextField extends PureComponent {
     y1: 0,
   }
 
-  static getDerivedStateFromProps({ error }, state) {
+  static getDerivedStateFromProps({error}, state) {
     /* Keep last received error in state */
     if (error && error !== state.error) {
-      return { error }
+      return {error}
     }
 
     return null
@@ -164,9 +164,9 @@ export default class TextField extends PureComponent {
     this.mounted = false
     this.focused = false
 
-    let { value: text, error, fontSize } = this.props
+    let {value: text, error, fontSize} = this.props
 
-    let labelState = labelStateFromProps(this.props, { text }) ? 1 : 0
+    let labelState = labelStateFromProps(this.props, {text}) ? 1 : 0
     let focusState = errorStateFromProps(this.props) ? -1 : 0
 
     this.state = {
@@ -184,10 +184,10 @@ export default class TextField extends PureComponent {
 
   createGetter(name) {
     this[name] = () => {
-      let { [name]: value } = this.props
-      let { [name]: defaultValue } = this.constructor
+      let {[name]: value} = this.props
+      let {[name]: defaultValue} = this.constructor
 
-      return { ...defaultValue, ...value }
+      return {...defaultValue, ...value}
     }
   }
 
@@ -216,8 +216,8 @@ export default class TextField extends PureComponent {
   }
 
   startFocusAnimation() {
-    let { focusAnimation } = this.state
-    let { animationDuration: duration } = this.props
+    let {focusAnimation} = this.state
+    let {animationDuration: duration} = this.props
 
     let options = {
       toValue: this.focusState(),
@@ -229,8 +229,8 @@ export default class TextField extends PureComponent {
   }
 
   startLabelAnimation() {
-    let { labelAnimation } = this.state
-    let { animationDuration: duration } = this.props
+    let {labelAnimation} = this.state
+    let {animationDuration: duration} = this.props
 
     let options = {
       toValue: this.labelState(),
@@ -242,7 +242,7 @@ export default class TextField extends PureComponent {
   }
 
   setNativeProps(props) {
-    let { current: input } = this.inputRef
+    let {current: input} = this.inputRef
 
     input.setNativeProps(props)
   }
@@ -264,8 +264,8 @@ export default class TextField extends PureComponent {
   }
 
   focus() {
-    let { disabled, editable } = this.props
-    let { current: input } = this.inputRef
+    let {disabled, editable} = this.props
+    let {current: input} = this.inputRef
 
     if (!disabled && editable) {
       input.focus()
@@ -273,13 +273,13 @@ export default class TextField extends PureComponent {
   }
 
   blur() {
-    let { current: input } = this.inputRef
+    let {current: input} = this.inputRef
 
     input.blur()
   }
 
   clear() {
-    let { current: input } = this.inputRef
+    let {current: input} = this.inputRef
 
     input.clear()
 
@@ -288,8 +288,8 @@ export default class TextField extends PureComponent {
   }
 
   value() {
-    let { text } = this.state
-    let { defaultValue } = this.props
+    let {text} = this.state
+    let {defaultValue} = this.props
 
     let value = this.isDefaultVisible() ? defaultValue : text
 
@@ -301,18 +301,18 @@ export default class TextField extends PureComponent {
   }
 
   setValue(text) {
-    this.setState({ text })
+    this.setState({text})
   }
 
   isFocused() {
-    let { current: input } = this.inputRef
+    let {current: input} = this.inputRef
 
     return input.isFocused()
   }
 
   isRestricted() {
-    let { characterRestriction: limit } = this.props
-    let { length: count } = this.value()
+    let {characterRestriction: limit} = this.props
+    let {length: count} = this.value()
 
     return limit < count
   }
@@ -322,14 +322,14 @@ export default class TextField extends PureComponent {
   }
 
   isDefaultVisible() {
-    let { text, receivedFocus } = this.state
-    let { defaultValue } = this.props
+    let {text, receivedFocus} = this.state
+    let {defaultValue} = this.props
 
     return !receivedFocus && null == text && null != defaultValue
   }
 
   isPlaceholderVisible() {
-    let { placeholder } = this.props
+    let {placeholder} = this.props
 
     return placeholder && !this.focused && !this.value()
   }
@@ -339,8 +339,8 @@ export default class TextField extends PureComponent {
   }
 
   onFocus(event) {
-    let { onFocus, clearTextOnFocus } = this.props
-    let { receivedFocus } = this.state
+    let {onFocus, clearTextOnFocus} = this.props
+    let {receivedFocus} = this.state
 
     if ('function' === typeof onFocus) {
       onFocus(event)
@@ -356,12 +356,12 @@ export default class TextField extends PureComponent {
     this.startLabelAnimation()
 
     if (!receivedFocus) {
-      this.setState({ receivedFocus: true, text: this.value() })
+      this.setState({receivedFocus: true, text: this.value()})
     }
   }
 
   onBlur(event) {
-    let { onBlur } = this.props
+    let {onBlur} = this.props
 
     if ('function' === typeof onBlur) {
       onBlur(event)
@@ -374,7 +374,7 @@ export default class TextField extends PureComponent {
   }
 
   onChange(event) {
-    let { onChange } = this.props
+    let {onChange} = this.props
 
     if ('function' === typeof onChange) {
       onChange(event)
@@ -382,13 +382,13 @@ export default class TextField extends PureComponent {
   }
 
   onChangeText(text) {
-    let { onChangeText, formatText } = this.props
+    let {onChangeText, formatText} = this.props
 
     if ('function' === typeof formatText) {
       text = formatText(text)
     }
 
-    this.setState({ text })
+    this.setState({text})
 
     if ('function' === typeof onChangeText) {
       onChangeText(text)
@@ -396,8 +396,8 @@ export default class TextField extends PureComponent {
   }
 
   onContentSizeChange(event) {
-    let { onContentSizeChange, fontSize } = this.props
-    let { height } = event.nativeEvent.contentSize
+    let {onContentSizeChange, fontSize} = this.props
+    let {height} = event.nativeEvent.contentSize
 
     if ('function' === typeof onContentSizeChange) {
       onContentSizeChange(event)
@@ -406,29 +406,29 @@ export default class TextField extends PureComponent {
     this.setState({
       height: Math.max(
         fontSize * 1.5,
-        Math.ceil(height) + Platform.select({ ios: 4, android: 1 })
+        Math.ceil(height) + Platform.select({ios: 4, android: 1})
       ),
     })
   }
 
   onFocusAnimationEnd() {
-    let { error } = this.props
-    let { error: retainedError } = this.state
+    let {error} = this.props
+    let {error: retainedError} = this.state
 
     if (this.mounted && !error && retainedError) {
-      this.setState({ error: null })
+      this.setState({error: null})
     }
   }
 
   inputHeight() {
-    let { height: computedHeight } = this.state
-    let { multiline, fontSize, height = computedHeight } = this.props
+    let {height: computedHeight} = this.state
+    let {multiline, fontSize, height = computedHeight} = this.props
 
     return multiline ? height : fontSize * 1.5
   }
 
   inputContainerHeight() {
-    let { labelFontSize, multiline } = this.props
+    let {labelFontSize, multiline} = this.props
     let contentInset = this.contentInset()
 
     if ('web' === Platform.OS && multiline) {
@@ -461,7 +461,7 @@ export default class TextField extends PureComponent {
   }
 
   inputStyle() {
-    let { fontSize, baseColor, textColor, disabled, multiline } = this.props
+    let {fontSize, baseColor, textColor, disabled, multiline} = this.props
 
     let color = disabled || this.isDefaultVisible() ? baseColor : textColor
 
@@ -490,7 +490,7 @@ export default class TextField extends PureComponent {
   renderLabel(props) {
     let offset = this.labelOffset()
 
-    let { label, fontSize, labelFontSize, labelTextStyle } = this.props
+    let {label, fontSize, labelFontSize, labelTextStyle} = this.props
 
     return (
       <Label
@@ -509,13 +509,13 @@ export default class TextField extends PureComponent {
   }
 
   renderAccessory(prop) {
-    let { [prop]: renderAccessory } = this.props
+    let {[prop]: renderAccessory} = this.props
 
     return 'function' === typeof renderAccessory ? renderAccessory() : null
   }
 
   renderAffix(type) {
-    let { labelAnimation } = this.state
+    let {labelAnimation} = this.state
     let {
       [type]: affix,
       fontSize,
@@ -539,7 +539,7 @@ export default class TextField extends PureComponent {
   }
 
   renderHelper() {
-    let { focusAnimation, error } = this.state
+    let {focusAnimation, error} = this.state
 
     let {
       title,
@@ -550,7 +550,7 @@ export default class TextField extends PureComponent {
       characterRestriction: limit,
     } = this.props
 
-    let { length: count } = this.value()
+    let {length: count} = this.value()
     let contentInset = this.contentInset()
 
     let containerStyle = {
@@ -616,7 +616,7 @@ export default class TextField extends PureComponent {
   }
 
   render() {
-    let { labelAnimation, focusAnimation } = this.state
+    let {labelAnimation, focusAnimation} = this.state
     let {
       editable,
       disabled,
